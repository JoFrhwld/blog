{
  "hash": "560f3dee99d89192060f1b0cfbb6e01b",
  "result": {
    "markdown": "---\ntitle: \"Rising Wooders: 2\"\nsubtitle: \"Part 2: Saying Wooder\"\nauthor: \"Josef Fruehwald\"\ndate: 2023-01-01\ncategories:\n  - \"research\"\n  - \"linguistics\"\ntwitter-card: \n#  image: \"index_files/figure-html/fig-wooder-paper-1.png\"\n  card-style: summary_large_image\n  creator: \"@jofrhwld\"\nopen-graph: true\n # image: \"index_files/figure-html/fig-wooder-paper-1.png\"  \nknitr: \n  opts_chunk: \n    message: false\n---\n\n\nThis is part 2 of my blog posts to accompany my ADS2023 Poster.\n\n[![](/posts/2022/12/2022-12-31_wooder1/assets/ADS2023-wooder.png){fig-alt=\"The full American Dialect Society poster for \\\"Philadelphians' say Wooder, and that's that\\\"?\"}](/posts/2022/12/2022-12-31_wooder1/assets/ADS2023-wooder.png)\n\n## Wooder\n\nAs I said in [the previous post](../../../2022/12/2022-12-31_wooder1/index.qmd), people seem to be very aware *now* that pronouncing \"water\" as \\[wʊɾɚ\\] is a feature of Philadelphia English, but\n\n## Acoustics\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"libraries\"}\nlibrary(tidyverse)\nlibrary(khroma)\nlibrary(scales)\nlibrary(geomtextpath)\nlibrary(ggnewscale)\n\nlibrary(tuneR)\nlibrary(seewave)\n\nlibrary(readtextgrid)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"loading data\"}\nwater_wav <- readWave(\"data/water.wav\")\nwater_formant <- read_csv(\"data/water.csv\")\nwater_tg <- read_textgrid(\"data/water.TextGrid\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"spectrogram processing\"}\nwater_wav |> \n  spectro(\n    # window length, in terms of samples\n    wl = 0.005 * water_wav@samp.rate, \n    # window overlap\n    ovlp = 90, \n    plot = F\n    ) -> spect\n\n# \"dynamic range\"\ndyn <- -50\n\ncolnames(spect$amp) <- spect$time\nrownames(spect$amp) <- spect$freq\n\nspect_df <- \n  spect$amp |> \n  as_tibble(rownames = \"freq\") |> \n  pivot_longer(-freq, names_to = \"time\", values_to = \"amp\") |> \n  mutate(freq = as.numeric(freq),\n           time = as.numeric(time)) |> \n  # floor at the dynamic range\n  mutate(amp = case_when(amp <= dyn ~ dyn,\n                         TRUE ~ amp)) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"textgrid processing\"}\nwater_labels <- \n  water_tg |> \n  filter(tier_num == 1) |> \n  mutate(ipa_label = case_when(text == \"W\" ~ \"wɔ(ɹ)\",\n                               text == \"AO1\" ~ \"wɔ(ɹ)\",\n                               text == \"T\" ~ \"ɾ\",\n                               text == \"ER0\" ~ \"ɚ\")) |> \n  group_by(ipa_label) |> \n  summarise(\n    xmin = min(xmin),\n    xmax = max(xmax)\n    ) |> \n  arrange(xmin) |> \n  rowwise() |> \n  mutate(midpoint = median(c(xmin, xmax)))\n\nwater_boundaries <- \n  water_labels |> \n  select(-midpoint) |> \n  pivot_longer(-ipa_label) |> \n  select(value) |> \n  distinct()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"formant track processing\"}\nformant_df <- \n  water_formant |> \n  select(time, f1, f2, f3) |> \n  pivot_longer(\n    -time, \n    names_to = \"formant\",\n    values_to = \"hz\"\n    ) |> \n  mutate(\n    formant = toupper(formant),\n    formant_num = str_extract(formant, \"\\\\d\"),\n    formant_num = as.numeric(formant_num)\n    )\n```\n:::\n\n::: {.cell crop='true'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"plotting code\"}\nspect_df |> \n  ggplot(aes(time, freq*1000))+\n    stat_contour(\n      aes(z = amp, fill = after_stat(level)),\n      geom = \"polygon\",\n      bins = 500\n      )+\n    scale_fill_grayC(reverse = T, guide = \"none\")+\n    geom_vline(\n      data = water_boundaries, \n      aes(xintercept = value),\n      linetype = 2, \n      color = \"grey70\"\n      )+\n    geom_text(\n      data = water_labels,\n      aes(\n        x = midpoint, \n        label = ipa_label\n        ),\n      family = \"Fira Sans\",\n      y = 5000,\n      size = 6\n    )+\n    new_scale_fill()+\n    geom_labelline(\n      data = formant_df,\n      aes(\n        x = time,\n        y = hz,\n        fill = formant,\n        color = formant,\n        label = formant,\n        hjust = formant_num/10\n        ),\n      textcolor = \"white\",\n      linewidth = 1.5\n      )+\n    scale_fill_manual(\n      values = c(\"#33BBEE\", \"#EE3377\", \"#009988\"),\n      guide = \"none\"\n    )+\n    scale_color_manual(\n      values = c(\"#33BBEE\", \"#EE3377\", \"#009988\"),\n      guide = \"none\"\n    )+\n    scale_y_continuous(expand = expansion(mult = 0),\n                       labels = label_comma())+\n    coord_cartesian(ylim = c(0, 5500))+\n    labs(\n      x = \"time (s)\", \n      y = \"freq (hz)\",\n      title = '\"water\" spectrogram',\n      subtitle = str_wrap(\n        \"sample token from a speaker born in 1890\n        with a dropping F3 prior to the flap\",\n        width = 40\n        )\n      )+\n    theme(aspect.ratio = 5/8,\n          text = element_text(size = 16),\n          plot.subtitle = element_text(size = 10, color = \"grey80\"),\n          plot.caption = element_text(size = 10, color = \"grey80\"))\n```\n\n::: {.cell-output-display}\n![Spectrogram of a token of 'water' from the PNC, illustrating a dropping F3 prior to the flap](index_files/figure-html/fig-spectrogram-1.png){#fig-spectrogram fig-alt='Spectrogram of a token of \\'water\\' from the PNC, illustrating a dropping F3 prior to the flap' width=576}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}