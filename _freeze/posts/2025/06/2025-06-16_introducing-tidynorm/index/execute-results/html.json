{
  "hash": "625086ee4c5cb5626ed95e5f5aa4387d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introducing tidynorm\"\ndescription: |\n  Here's a brief introduction to the new `{tidynorm}` package.\ndate: 2025-06-16\nformat: html\neditor: visual\nknitr: \n  opts_chunk: \n    crop: true\n    fig.width: 6\n    fig.asp: 0.618\n    out.width: 70%\n    fig.align: center\nbibliography: references.bib\n---\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n::::::: callout-tip\n## The upshot\n\nThe `{tidynorm}` package has convenience functions for normalizing\n\n:::::: {layout-ncol=\"3\"}\n<div>\n\nPoint measurements\n\n\n::: {.cell layout-align=\"center\"}\n- `norm_barkz()`\n- `norm_deltaF()`\n- `norm_lobanov()`\n- `norm_nearey()`\n- `norm_wattfab()`\n:::\n\n\n</div>\n\n<div>\n\nFormant Tracks\n\n\n::: {.cell layout-align=\"center\"}\n- `norm_track_barkz()`\n- `norm_track_deltaF()`\n- `norm_track_lobanov()`\n- `norm_track_nearey()`\n- `norm_track_wattfab()`\n:::\n\n\n</div>\n\n<div>\n\nDCT coefficients\n\n\n::: {.cell layout-align=\"center\"}\n- `norm_dct_barkz()`\n- `norm_dct_deltaF()`\n- `norm_dct_lobanov()`\n- `norm_dct_nearey()`\n- `norm_dct_wattfab()`\n:::\n\n\n</div>\n::::::\n\nAs well as generic functions to implement your own normalization method.\n\nYou can install `{tidynorm}` in your preferred way from CRAN.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ninstall.packages(\"tidynorm\")\n```\n:::\n\n:::::::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Loading Packages\"}\nlibrary(tidynorm)\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(ggtext)\nlibrary(gt)\nsource(here::here(\"_defaults.R\"))\n```\n:::\n\n\n## What is speaker vowel normalization?\n\nImagine a very tall person from London speaking to you.\nYou can probably imagine what their accent sounds like.\nNow imagine a very short person speaking to you in the same accent.\nIn reality, if you heard these two people speaking in what you perceive to be identical accents, the acoustics of their speech will be different due to their (likely) different vocal tract lengths (VTL).\n\nUsing some rough heuristics and assumptions, the overall vowel spaces of these two speakers might look something like this:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"guestimates functions\"}\nvtl_2_formant <- function(vtl, f = 1){\n  dF = 34300/(2*vtl)\n  dF * (f * 0.5)\n}\n\nvowel_polygon <- function(F1, F2){\n  tibble(\n    F1 = c(\n      F1 * 0.6,\n      F1 * 1.45,\n      F1 * 0.6\n      ),\n    F2 = c(\n      F2 * 1.5,\n      F2,\n      F2 * 0.52\n    )\n  )\n}\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\" renderings='[\"light\",\"dark\"]'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"vowel-space-plot\"}\ntibble(\n  vtl = seq(14, 17, length = 2)\n) |> \n  mutate(\n    F1 = vtl_2_formant(vtl, 1),\n    F2 = vtl_2_formant(vtl, 2),\n    F3 = vtl_2_formant(vtl, 3)\n  ) |>  mutate(\n    vtl = factor(vtl, labels = c(\"short\", \"long\"))\n  ) ->\n  speaker_formants\n\nspeaker_formants |> \n  reframe(\n    .by = vtl,\n    vowel_polygon(F1, F2)\n  ) |> \n  ggplot(\n    aes(F2, F1)\n  ) +\n  geom_polygon(\n    aes(group = vtl, fill = vtl, color = vtl),\n    linewidth = 1,\n    alpha = 0.6\n  ) +\n  scale_y_reverse() +\n  scale_x_reverse() +\n  labs(fill = \"VTL\", color = \"VTL\") +\n  coord_fixed() -> p\n\np\np+theme_dark()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=70%}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-2.png){fig-align='center' width=70%}\n:::\n:::\n\n\nThese speakers' overall vowel spaces have different center points, and cover different areas.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"plotting code\"}\nspeaker_formants |> \n  ggplot(\n    aes(F2, F1)\n  ) +\n  geom_point(\n    aes(color = vtl),\n    size = 5\n  ) +\n  scale_y_reverse() +\n  scale_x_reverse() +\n  labs(title = \"vowel space center\") -> center_p\n\nspeaker_formants |> \n  reframe(\n    .by = vtl,\n    vowel_polygon(F1, F2)\n  ) |> \n  summarise(\n    .by = vtl,\n    b = diff(range(F1)),\n    h = diff(range(F2))\n  ) |> \n  mutate(\n    a = (b/100 * h/100)*2\n  ) |> \n  ggplot(\n    aes(\n      vtl, a\n    )\n  )+\n  geom_col(aes(fill = vtl)) +\n  labs(\n    y = \"area (kHz<sup>2</sup>)\",\n    title = \"vowel space area\"\n  )+\n  theme(\n    axis.title.y = element_markdown()\n  ) ->\n  area_plot\n```\n:::\n\n\n::: light-content\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=70%}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-2.png){fig-align='center' width=70%}\n:::\n:::\n\n:::\n\n::: dark-content\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=70%}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-2.png){fig-align='center' width=70%}\n:::\n:::\n\n:::\n\nThe goal of any speaker vowel normalization method is to try to line up speakers' vowel spaces so that speaker A's highest, frontest vowels are lined up with speaker B's, so that speaker A's lowest, backest vowels are lined up with speaker B's, etc.\nOnce we have their vowel spaces aligned in a such way that we know similarities between them are matched, we can start investigating any differences.\n\n::: callout-tip\n## Vowel Space â‰  Pitch\n\nOne really important thing to keep in mind is that vowel space differences due to different vocal tract lengths are *not* the same as differences in speakers' pitch.\nDifferences in speakers' pitch are caused by differences in how their vocal folds vibrate.\nYou can have two speakers' with the same exact pitch, but very different vocal tract lengths (& vowel spaces), and vice versa.\n:::\n\n## Normalization methods\n\nAll normalization methods involve some kind of shift in the location of a speaker's vowel space by some value $L$, scaling the size of a speaker's vowel space by some value $S$, or both.\n\n$$\nF' = \\frac{F-L}{S}\n$$\n\nThey way normalization methods mainly differ is in terms of\n\n-   Transformations applied to the original formant values before calculating $L$ and $S$ (e.g. log, bark).\n\n-   The exact functions used to calculate $L$ and $S$ (e.g. mean, standard deviation)\n\n-   The scope over which $L$ and $S$ are calculated (e.g. across all formants at once, or one formant at a time).\n\nFor example, the logic behind Nearey normalization [@neareyPhoneticFeatureSystems1978] is that after log transforming vowel spaces, they should really only differ in terms of the location of the centers, not in terms of their area.\n\n\n::: {.cell layout-align=\"center\" renderings='[\"light\",\"dark\"]'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"plotting code\"}\nspeaker_formants |> \n  reframe(\n    .by = vtl,\n    vowel_polygon(F1, F2)\n  ) |> \n  mutate(across(F1:F2, log)) |> \n  ggplot(\n    aes(F2, F1)\n  ) +\n  geom_polygon(\n    aes(\n      group = vtl, \n      fill = vtl, \n      color = vtl\n      ),\n    alpha = 0.6,\n    linewidth = 1\n  ) +\n  scale_y_reverse(\"log(F1)\") +\n  scale_x_reverse(\"log(F2)\") +\n  coord_fixed() -> p\n\np\np+theme_dark()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=70%}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-2.png){fig-align='center' width=70%}\n:::\n:::\n\n\nSo what Nearey normalization does is\n\n-   log transform the data\n\n-   take the average value across *all* formants\n\n-   subtracts that value from each token\n\nSo where $i$ is the formant number, and $j$ is the token number:\n\n$$\nF_{ij}' = \\frac{\\log F_{ij}-L}{1}\n$$\n\n$$\nL = \\frac{1}{MN} \\sum_{i=1}^3\\sum_{j=1}^N \\log F_{ij}\n$$\n\nIt's possible to do this yourself using [some tidyverse verbs](https://lingmethodshub.github.io/content/R/tidy-norm/), but it involves some pivoting between wide and long.\nThis, combined with [my work on normalizing vowel formant tracks](https://jofrhwld.github.io/dct_normalization/) motivated me to create the `{tidynorm}` package.\n\n## Normalizing with `{tidynorm}`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidynorm)\nlibrary(ggdensity)\n```\n:::\n\n\nLet's start with two speakers' unnormalized data\n\n\n::: {.cell layout-align=\"center\" renderings='[\"light\",\"dark\"]'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"plotting code\"}\nspeaker_data |> \n  ggplot(\n    aes(F2, F1, color = speaker)\n  ) +\n  stat_hdr(\n    probs = 0.95,\n    aes(fill = speaker),\n    linewidth = 1\n  )+\n  scale_x_reverse() +\n  scale_y_reverse() +\n  guides(\n    alpha = \"none\"\n  )+\n  coord_fixed()->p_unnorm\n\np_unnorm\np_unnorm + theme_dark()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=70%}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-2.png){fig-align='center' width=70%}\n:::\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"vunmenwxaa\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#vunmenwxaa table {\n  font-family: 'Public Sans', system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#vunmenwxaa thead, #vunmenwxaa tbody, #vunmenwxaa tfoot, #vunmenwxaa tr, #vunmenwxaa td, #vunmenwxaa th {\n  border-style: none;\n}\n\n#vunmenwxaa p {\n  margin: 0;\n  padding: 0;\n}\n\n#vunmenwxaa .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#vunmenwxaa .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#vunmenwxaa .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#vunmenwxaa .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#vunmenwxaa .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vunmenwxaa .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vunmenwxaa .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vunmenwxaa .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#vunmenwxaa .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#vunmenwxaa .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#vunmenwxaa .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#vunmenwxaa .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#vunmenwxaa .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#vunmenwxaa .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#vunmenwxaa .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vunmenwxaa .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#vunmenwxaa .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#vunmenwxaa .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#vunmenwxaa .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vunmenwxaa .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#vunmenwxaa .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#vunmenwxaa .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#vunmenwxaa .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vunmenwxaa .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#vunmenwxaa .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#vunmenwxaa .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vunmenwxaa .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vunmenwxaa .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#vunmenwxaa .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vunmenwxaa .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#vunmenwxaa .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vunmenwxaa .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vunmenwxaa .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vunmenwxaa .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vunmenwxaa .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vunmenwxaa .gt_left {\n  text-align: left;\n}\n\n#vunmenwxaa .gt_center {\n  text-align: center;\n}\n\n#vunmenwxaa .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#vunmenwxaa .gt_font_normal {\n  font-weight: normal;\n}\n\n#vunmenwxaa .gt_font_bold {\n  font-weight: bold;\n}\n\n#vunmenwxaa .gt_font_italic {\n  font-style: italic;\n}\n\n#vunmenwxaa .gt_super {\n  font-size: 65%;\n}\n\n#vunmenwxaa .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#vunmenwxaa .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#vunmenwxaa .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#vunmenwxaa .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#vunmenwxaa .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#vunmenwxaa .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#vunmenwxaa .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#vunmenwxaa .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#vunmenwxaa div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"a::stub\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"speaker\">speaker</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"vowel\">vowel</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"plt_vclass\">plt_vclass</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"ipa_vclass\">ipa_vclass</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"word\">word</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"F1\">F1</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"F2\">F2</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"F3\">F3</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier;\">1</th>\n<td headers=\"stub_1_1 speaker\" class=\"gt_row gt_left\">s01</td>\n<td headers=\"stub_1_1 vowel\" class=\"gt_row gt_left\">EY</td>\n<td headers=\"stub_1_1 plt_vclass\" class=\"gt_row gt_left\">eyF</td>\n<td headers=\"stub_1_1 ipa_vclass\" class=\"gt_row gt_left\">ejF</td>\n<td headers=\"stub_1_1 word\" class=\"gt_row gt_left\">OKAY</td>\n<td headers=\"stub_1_1 F1\" class=\"gt_row gt_right\">764</td>\n<td headers=\"stub_1_1 F2\" class=\"gt_row gt_right\">2088</td>\n<td headers=\"stub_1_1 F3\" class=\"gt_row gt_right\">2931</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier;\">2</th>\n<td headers=\"stub_1_2 speaker\" class=\"gt_row gt_left\">s01</td>\n<td headers=\"stub_1_2 vowel\" class=\"gt_row gt_left\">AH</td>\n<td headers=\"stub_1_2 plt_vclass\" class=\"gt_row gt_left\">uh</td>\n<td headers=\"stub_1_2 ipa_vclass\" class=\"gt_row gt_left\">ÊŒ</td>\n<td headers=\"stub_1_2 word\" class=\"gt_row gt_left\">UM</td>\n<td headers=\"stub_1_2 F1\" class=\"gt_row gt_right\">700</td>\n<td headers=\"stub_1_2 F2\" class=\"gt_row gt_right\">1881</td>\n<td headers=\"stub_1_2 F3\" class=\"gt_row gt_right\">3248</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier;\">3</th>\n<td headers=\"stub_1_3 speaker\" class=\"gt_row gt_left\">s01</td>\n<td headers=\"stub_1_3 vowel\" class=\"gt_row gt_left\">AY</td>\n<td headers=\"stub_1_3 plt_vclass\" class=\"gt_row gt_left\">ay</td>\n<td headers=\"stub_1_3 ipa_vclass\" class=\"gt_row gt_left\">aj</td>\n<td headers=\"stub_1_3 word\" class=\"gt_row gt_left\">I'M</td>\n<td headers=\"stub_1_3 F1\" class=\"gt_row gt_right\">889</td>\n<td headers=\"stub_1_3 F2\" class=\"gt_row gt_right\">1934</td>\n<td headers=\"stub_1_3 F3\" class=\"gt_row gt_right\">3120</td></tr>\n    <tr><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier;\">4</th>\n<td headers=\"stub_1_4 speaker\" class=\"gt_row gt_left\">s01</td>\n<td headers=\"stub_1_4 vowel\" class=\"gt_row gt_left\">IH</td>\n<td headers=\"stub_1_4 plt_vclass\" class=\"gt_row gt_left\">i</td>\n<td headers=\"stub_1_4 ipa_vclass\" class=\"gt_row gt_left\">Éª</td>\n<td headers=\"stub_1_4 word\" class=\"gt_row gt_left\">LIVED</td>\n<td headers=\"stub_1_4 F1\" class=\"gt_row gt_right\">556</td>\n<td headers=\"stub_1_4 F2\" class=\"gt_row gt_right\">1530</td>\n<td headers=\"stub_1_4 F3\" class=\"gt_row gt_right\">3462</td></tr>\n    <tr><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier;\">5</th>\n<td headers=\"stub_1_5 speaker\" class=\"gt_row gt_left\">s01</td>\n<td headers=\"stub_1_5 vowel\" class=\"gt_row gt_left\">IH</td>\n<td headers=\"stub_1_5 plt_vclass\" class=\"gt_row gt_left\">i</td>\n<td headers=\"stub_1_5 ipa_vclass\" class=\"gt_row gt_left\">Éª</td>\n<td headers=\"stub_1_5 word\" class=\"gt_row gt_left\">IN</td>\n<td headers=\"stub_1_5 F1\" class=\"gt_row gt_right\">612</td>\n<td headers=\"stub_1_5 F2\" class=\"gt_row gt_right\">2323</td>\n<td headers=\"stub_1_5 F3\" class=\"gt_row gt_right\">3359</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier; font-size: x-small; background-color: #E4E4E4;\">6..10696</th>\n<td headers=\"stub_1_6 speaker\" class=\"gt_row gt_left\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 vowel\" class=\"gt_row gt_left\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 plt_vclass\" class=\"gt_row gt_left\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 ipa_vclass\" class=\"gt_row gt_left\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 word\" class=\"gt_row gt_left\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 F1\" class=\"gt_row gt_right\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 F2\" class=\"gt_row gt_right\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 F3\" class=\"gt_row gt_right\" style=\"background-color: #E4E4E4;\"></td></tr>\n    <tr><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier;\">10697</th>\n<td headers=\"stub_1_7 speaker\" class=\"gt_row gt_left\">s03</td>\n<td headers=\"stub_1_7 vowel\" class=\"gt_row gt_left\">AH</td>\n<td headers=\"stub_1_7 plt_vclass\" class=\"gt_row gt_left\">@</td>\n<td headers=\"stub_1_7 ipa_vclass\" class=\"gt_row gt_left\">É™</td>\n<td headers=\"stub_1_7 word\" class=\"gt_row gt_left\">THE</td>\n<td headers=\"stub_1_7 F1\" class=\"gt_row gt_right\">429</td>\n<td headers=\"stub_1_7 F2\" class=\"gt_row gt_right\">1218</td>\n<td headers=\"stub_1_7 F3\" class=\"gt_row gt_right\">2352</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nWe can implement the logic of Nearey normalization in tidynorm's function `norm_generic()`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nspeaker_nearey <- speaker_data |>\n  norm_generic(\n    # the formants to normalize\n    F1:F3,\n    \n    # provide the speaker id column\n    .by = speaker,\n    \n    # pre calculation transformation function\n    .pre_trans = log,\n    \n    # location calculation\n    .L = mean(.formant, na.rm = T),\n    \n    # scope\n    .by_formant = F,\n    .by_token = F\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNormalization info\nâ€¢ normalized with `tidynorm::norm_generic()`\nâ€¢ normalized `F1`, `F2`, and `F3`\nâ€¢ normalized values in `F1_n`, `F2_n`, and `F3_n`\nâ€¢ grouped by `speaker`\nâ€¢ within formant: FALSE\nâ€¢ (.formant - mean(.formant, na.rm = T))/(1)\n```\n\n\n:::\n:::\n\n\nI tried to include a helpful message describing what kind of normalization just happened.\nHere's how the normalized data looks.\n\n\n::: {.cell layout-align=\"center\" renderings='[\"light\",\"dark\"]'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"plotting code\"}\nspeaker_nearey |> \n  ggplot(\n    aes(F2_n, F1_n, color = speaker)\n  ) +\n  stat_hdr(\n    probs = 0.95,\n    aes(fill = speaker),\n    linewidth = 1\n  )+\n  scale_x_reverse() +\n  scale_y_reverse() +\n  guides(\n    alpha = \"none\"\n  )+\n  coord_fixed()->p_nearey\n\np_nearey\np_nearey + theme_dark()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){fig-align='center' width=70%}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-2.png){fig-align='center' width=70%}\n:::\n:::\n\n\n### Implementing Lobanov\n\nThe Lobanov normalization technique [@lobanov] essentially z-scores each formant ($L$ = the mean, $S$ = the standard deviation).\nWe can see how that logic can be implemented in `norm_generic()` as well.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nspeaker_lobanov <- speaker_data |> \n  norm_generic(\n    # the formants to normalize\n    F1:F3,\n    \n    # provide the speaker id column\n    .by = speaker,\n    \n    # location calculation\n    .L = mean(.formant, na.rm = T),\n    \n    # scale calculation\n    .S = sd(.formant, na.rm = T),\n    \n    # scope\n    .by_formant = T,\n    .by_token = F\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNormalization info\nâ€¢ normalized with `tidynorm::norm_generic()`\nâ€¢ normalized `F1`, `F2`, and `F3`\nâ€¢ normalized values in `F1_n`, `F2_n`, and `F3_n`\nâ€¢ grouped by `speaker`\nâ€¢ within formant: TRUE\nâ€¢ (.formant - mean(.formant, na.rm = T))/(sd(.formant, na.rm = T))\n```\n\n\n:::\n:::\n\n\n\n::: {.cell layout-align=\"center\" renderings='[\"light\",\"dark\"]'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"plotting code\"}\nspeaker_lobanov |> \n  ggplot(\n    aes(F2_n, F1_n, color = speaker)\n  ) +\n  stat_hdr(\n    probs = 0.95,\n    aes(fill = speaker),\n    linewidth = 1\n  )+\n  scale_x_reverse() +\n  scale_y_reverse() +\n  guides(\n    alpha = \"none\"\n  )+\n  coord_fixed()->p_lobanov\n\np_lobanov\np_lobanov + theme_dark()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){fig-align='center' width=70%}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-2.png){fig-align='center' width=70%}\n:::\n:::\n\n\n### Convenience functions\n\nInstead of needing to write out the centering and scaling functions yourself every time, I've included convenience functions for some established normalization methods, including\n\n-   `norm_lobanov()`\n\n-   `norm_nearey()`\n\n-   `norm_deltaF()`\n\n-   `norm_wattfab()`\n\n-   `norm_barkz()`\n\nThey're all just wrappers around `norm_generic()`, so if you're looking for some inspiration implementing your own normalization method, have a look at [the source](https://github.com/JoFrhwld/tidynorm/blob/main/R/norm.R) to see how I implemented these.\n\nWe can apply multiple normalization methods to the same data set by chaining them.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nspeaker_multi <- speaker_data |> \n  norm_nearey(\n    F1:F3,\n    .by = speaker,\n    .silent = TRUE\n  ) |> \n  norm_lobanov(\n    F1:F3,\n    .by = speaker, \n    .silent = TRUE\n  ) |> \n  norm_deltaF(\n    F1:F3,\n    .by = speaker, \n    .silent = T\n  )\n```\n:::\n\n\nIf you've lost track of which normalization methods you've used, and where the normalized values have gone, you can print an information message with `check_norm()`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncheck_norm(speaker_multi)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNormalization Step\nâ€¢ normalized with `tidynorm::norm_nearey()`\nâ€¢ normalized `F1`, `F2`, and `F3`\nâ€¢ normalized values in `F1_lm`, `F2_lm`, and `F3_lm`\nâ€¢ grouped by `speaker`\nâ€¢ within formant: FALSE\nâ€¢ (.formant - mean(.formant, na.rm = T))/(1)\n\n\nNormalization Step\nâ€¢ normalized with `tidynorm::norm_lobanov()`\nâ€¢ normalized `F1`, `F2`, and `F3`\nâ€¢ normalized values in `F1_z`, `F2_z`, and `F3_z`\nâ€¢ grouped by `speaker`\nâ€¢ within formant: TRUE\nâ€¢ (.formant - mean(.formant, na.rm = T))/(sd(.formant, na.rm = T))\n\n\nNormalization Step\nâ€¢ normalized with `tidynorm::norm_deltaF()`\nâ€¢ normalized `F1`, `F2`, and `F3`\nâ€¢ normalized values in `F1_df`, `F2_df`, and `F3_df`\nâ€¢ grouped by `speaker`\nâ€¢ within formant: FALSE\nâ€¢ (.formant - 0)/(mean(.formant/(.formant_num - 0.5), na.rm = T))\n```\n\n\n:::\n:::\n\n\n## Normalizing Formant Tracks\n\nWhile I think [the advice I have for normalizing formant tracks](https://jofrhwld.github.io/dct_normalization/) is good, I admit it's fairly complex.\nSo I've also implemented formant track normalization methods:\n\n-   `norm_track_generic()`\n\n-   `norm_track_lobanov()`\n\n-   `norm_track_nearey()`\n\n-   `norm_track_wattfab()`\n\n-   `norm_track_barkz()`\n\nLet's look at one of them in action on formant track data.\n\n\n::: {.cell layout-align=\"center\" renderings='[\"light\",\"dark\"]'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"plotting code\"}\nspeaker_tracks |>   \n  filter(\n    .by = c(speaker, id),\n    !any(F1 > 1200)\n  ) ->\n  speaker_tracks\n\nspeaker_tracks |> \n  ggplot(\n    aes(F2, F1, color = speaker)\n  )+\n  geom_path(\n    alpha = 0.2,\n    aes(group = interaction(speaker, id))\n  )+\n  guides(\n    color = guide_legend(override.aes = list(alpha = 1))\n  )+\n  scale_x_reverse()+\n  scale_y_reverse() -> p\np\np + theme_dark()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){fig-align='center' width=70%}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-2.png){fig-align='center' width=70%}\n:::\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"soombmckje\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#soombmckje table {\n  font-family: 'Public Sans', system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#soombmckje thead, #soombmckje tbody, #soombmckje tfoot, #soombmckje tr, #soombmckje td, #soombmckje th {\n  border-style: none;\n}\n\n#soombmckje p {\n  margin: 0;\n  padding: 0;\n}\n\n#soombmckje .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#soombmckje .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#soombmckje .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#soombmckje .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#soombmckje .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#soombmckje .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#soombmckje .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#soombmckje .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#soombmckje .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#soombmckje .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#soombmckje .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#soombmckje .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#soombmckje .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#soombmckje .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#soombmckje .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#soombmckje .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#soombmckje .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#soombmckje .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#soombmckje .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#soombmckje .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#soombmckje .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#soombmckje .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#soombmckje .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#soombmckje .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#soombmckje .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#soombmckje .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#soombmckje .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#soombmckje .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#soombmckje .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#soombmckje .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#soombmckje .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#soombmckje .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#soombmckje .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#soombmckje .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#soombmckje .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#soombmckje .gt_left {\n  text-align: left;\n}\n\n#soombmckje .gt_center {\n  text-align: center;\n}\n\n#soombmckje .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#soombmckje .gt_font_normal {\n  font-weight: normal;\n}\n\n#soombmckje .gt_font_bold {\n  font-weight: bold;\n}\n\n#soombmckje .gt_font_italic {\n  font-style: italic;\n}\n\n#soombmckje .gt_super {\n  font-size: 65%;\n}\n\n#soombmckje .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#soombmckje .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#soombmckje .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#soombmckje .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#soombmckje .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#soombmckje .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#soombmckje .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#soombmckje .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#soombmckje div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"a::stub\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"speaker\">speaker</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"id\">id</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"vowel\">vowel</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"plt_vclass\">plt_vclass</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"word\">word</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"t\">t</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"F1\">F1</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"F2\">F2</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"F3\">F3</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier;\">1</th>\n<td headers=\"stub_1_1 speaker\" class=\"gt_row gt_left\">s01</td>\n<td headers=\"stub_1_1 id\" class=\"gt_row gt_right\">0</td>\n<td headers=\"stub_1_1 vowel\" class=\"gt_row gt_left\">EY</td>\n<td headers=\"stub_1_1 plt_vclass\" class=\"gt_row gt_left\">eyF</td>\n<td headers=\"stub_1_1 word\" class=\"gt_row gt_left\">OKAY</td>\n<td headers=\"stub_1_1 t\" class=\"gt_row gt_right\">32.39</td>\n<td headers=\"stub_1_1 F1\" class=\"gt_row gt_right\">754</td>\n<td headers=\"stub_1_1 F2\" class=\"gt_row gt_right\">2145</td>\n<td headers=\"stub_1_1 F3\" class=\"gt_row gt_right\">2913</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier;\">2</th>\n<td headers=\"stub_1_2 speaker\" class=\"gt_row gt_left\">s01</td>\n<td headers=\"stub_1_2 id\" class=\"gt_row gt_right\">0</td>\n<td headers=\"stub_1_2 vowel\" class=\"gt_row gt_left\">EY</td>\n<td headers=\"stub_1_2 plt_vclass\" class=\"gt_row gt_left\">eyF</td>\n<td headers=\"stub_1_2 word\" class=\"gt_row gt_left\">OKAY</td>\n<td headers=\"stub_1_2 t\" class=\"gt_row gt_right\">32.40</td>\n<td headers=\"stub_1_2 F1\" class=\"gt_row gt_right\">719</td>\n<td headers=\"stub_1_2 F2\" class=\"gt_row gt_right\">2155</td>\n<td headers=\"stub_1_2 F3\" class=\"gt_row gt_right\">2913</td></tr>\n    <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier;\">3</th>\n<td headers=\"stub_1_3 speaker\" class=\"gt_row gt_left\">s01</td>\n<td headers=\"stub_1_3 id\" class=\"gt_row gt_right\">0</td>\n<td headers=\"stub_1_3 vowel\" class=\"gt_row gt_left\">EY</td>\n<td headers=\"stub_1_3 plt_vclass\" class=\"gt_row gt_left\">eyF</td>\n<td headers=\"stub_1_3 word\" class=\"gt_row gt_left\">OKAY</td>\n<td headers=\"stub_1_3 t\" class=\"gt_row gt_right\">32.41</td>\n<td headers=\"stub_1_3 F1\" class=\"gt_row gt_right\">752</td>\n<td headers=\"stub_1_3 F2\" class=\"gt_row gt_right\">2115</td>\n<td headers=\"stub_1_3 F3\" class=\"gt_row gt_right\">2914</td></tr>\n    <tr><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier;\">4</th>\n<td headers=\"stub_1_4 speaker\" class=\"gt_row gt_left\">s01</td>\n<td headers=\"stub_1_4 id\" class=\"gt_row gt_right\">0</td>\n<td headers=\"stub_1_4 vowel\" class=\"gt_row gt_left\">EY</td>\n<td headers=\"stub_1_4 plt_vclass\" class=\"gt_row gt_left\">eyF</td>\n<td headers=\"stub_1_4 word\" class=\"gt_row gt_left\">OKAY</td>\n<td headers=\"stub_1_4 t\" class=\"gt_row gt_right\">32.42</td>\n<td headers=\"stub_1_4 F1\" class=\"gt_row gt_right\">762</td>\n<td headers=\"stub_1_4 F2\" class=\"gt_row gt_right\">2087</td>\n<td headers=\"stub_1_4 F3\" class=\"gt_row gt_right\">2931</td></tr>\n    <tr><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier;\">5</th>\n<td headers=\"stub_1_5 speaker\" class=\"gt_row gt_left\">s01</td>\n<td headers=\"stub_1_5 id\" class=\"gt_row gt_right\">0</td>\n<td headers=\"stub_1_5 vowel\" class=\"gt_row gt_left\">EY</td>\n<td headers=\"stub_1_5 plt_vclass\" class=\"gt_row gt_left\">eyF</td>\n<td headers=\"stub_1_5 word\" class=\"gt_row gt_left\">OKAY</td>\n<td headers=\"stub_1_5 t\" class=\"gt_row gt_right\">32.43</td>\n<td headers=\"stub_1_5 F1\" class=\"gt_row gt_right\">738</td>\n<td headers=\"stub_1_5 F2\" class=\"gt_row gt_right\">2088</td>\n<td headers=\"stub_1_5 F3\" class=\"gt_row gt_right\">2933</td></tr>\n    <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier; font-size: x-small; background-color: #E4E4E4;\">6..19159</th>\n<td headers=\"stub_1_6 speaker\" class=\"gt_row gt_left\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 id\" class=\"gt_row gt_right\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 vowel\" class=\"gt_row gt_left\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 plt_vclass\" class=\"gt_row gt_left\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 word\" class=\"gt_row gt_left\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 t\" class=\"gt_row gt_right\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 F1\" class=\"gt_row gt_right\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 F2\" class=\"gt_row gt_right\" style=\"background-color: #E4E4E4;\"></td>\n<td headers=\"stub_1_6 F3\" class=\"gt_row gt_right\" style=\"background-color: #E4E4E4;\"></td></tr>\n    <tr><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_right gt_stub\" style=\"font-family: Courier;\">19160</th>\n<td headers=\"stub_1_7 speaker\" class=\"gt_row gt_left\">s03</td>\n<td headers=\"stub_1_7 id\" class=\"gt_row gt_right\">818</td>\n<td headers=\"stub_1_7 vowel\" class=\"gt_row gt_left\">UW</td>\n<td headers=\"stub_1_7 plt_vclass\" class=\"gt_row gt_left\">Tuw</td>\n<td headers=\"stub_1_7 word\" class=\"gt_row gt_left\">TO</td>\n<td headers=\"stub_1_7 t\" class=\"gt_row gt_right\">406.66</td>\n<td headers=\"stub_1_7 F1\" class=\"gt_row gt_right\">275</td>\n<td headers=\"stub_1_7 F2\" class=\"gt_row gt_right\">1336</td>\n<td headers=\"stub_1_7 F3\" class=\"gt_row gt_right\">2364</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nIn addition to identifying the speaker ID column, we also need to provide a column that uniquely identifies each token (in this data set, `id`) and we *can* provide an optional column of time information.[^1]\n\n[^1]: By default, these track normalization methods will also slightly smooth the formant tracks.\n    But if you don't want that, you can pass it `.order = NA.`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nspeaker_track_lobanov <- speaker_tracks |> \n  norm_track_lobanov(\n    # the formants to normalize\n    F1:F3,\n    \n    # provide the speaker id column\n    .by = speaker,\n    \n    # provide the token id column\n    .token_id_col = id,\n    \n    # provide a time column\n    .time_col = t\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNormalization info\nâ€¢ normalized with `tidynorm::norm_track_lobanov()`\nâ€¢ normalized `F1`, `F2`, and `F3`\nâ€¢ normalized values in `F1_z`, `F2_z`, and `F3_z`\nâ€¢ token id column: `id`\nâ€¢ time column: `t`\nâ€¢ grouped by `speaker`\nâ€¢ within formant: TRUE\nâ€¢ (.formant - mean(.formant, na.rm = T))/sd(.formant, na.rm = T)\n```\n\n\n:::\n:::\n\n\n\n::: {.cell layout-align=\"center\" renderings='[\"light\",\"dark\"]'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"plotting code\"}\nspeaker_track_lobanov |> \n  ggplot(\n    aes(F2_z, F1_z, color = speaker)\n  )+\n  geom_path(\n    alpha = 0.2,\n    aes(group = interaction(speaker, id))\n  )+\n  guides(\n    color = guide_legend(override.aes = list(alpha = 1))\n  )+\n  scale_x_reverse()+\n  scale_y_reverse() -> p\n\np\np + theme_dark()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){fig-align='center' width=70%}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-2.png){fig-align='center' width=70%}\n:::\n:::\n\n\n## Extending `{tidynorm}`\n\nIf there is a normalization method you really like, or are just interested in, and aren't sure how to implement it in `{tidynorm}`, add an issue (ideally with a reference or some math) on the [github issues page](https://github.com/JoFrhwld/tidynorm/issues).\n\n## Closing thoughts\n\nThis was a complex, but really enjoyable package to write.\nIn addition to wrapping my head around [\"tidy evaluation\"](https://adv-r.hadley.nz/evaluation.html), there was a lot of conceptual work in figuring out how to implement one consistent data processing workflow in `norm_generic()` that could carry out the normalization methods that have been described in the literature, each in their own way.\nSomething like\n\n> Take each formant column and z-score it.\n\nis pretty straightforward, but something like\n\n> Transform Hz into Bark, then for each token, subtract the third formant from the first and second formants.\n\nis a little trickier to include in the same workflow.\n\nThe `{tidynorm}` method most different from the method as described in the literature is `norm_wattfab()`.\nAs described by @wattEvaluationTechniqueImproving2002, the method involves calculating the means of corner vowels.\nDoing that inside of a tidynorm workflow isn't impossible, but would sacrifice a lot of generality, and would require users to provide a vowel-class column name every time (since I can't assume what everyone's data columns are called).\nInstead, I went for the shortcut method also used by @johnsonDFMethodVocal2020, and calculated their $S$ values based on the mean across each formant.\n\nI might revisit that in the future, but it would require a much more hands-on approach from the user than the other convenience functions currently do.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}