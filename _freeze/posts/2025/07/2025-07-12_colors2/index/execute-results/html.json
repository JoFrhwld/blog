{
  "hash": "9936c088287f17418311dd43a2632cc0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"index\"\nformat: html\neditor: visual\ndraft: true\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexpand_grid(\n  x = seq(-1,1, length = 300),\n  y = seq(-1,1, length = 300)\n) |> \n  \n  mutate(\n    L = sqrt((x^2) + (y^2))\n  ) |> \n  filter(\n    L <= 0.9\n  ) |> \n  mutate(\n    H_rad = atan2(x,y),\n    H_rad = case_when(\n      H_rad < 0 ~ H_rad + (2*pi),\n      .default = H_rad\n    ),\n    H = H_rad * (180/pi)\n  ) |> \n  rowwise() |> \n  mutate(\n    hls = HLS(H, L, 0.75) |>  list(),\n    hex = hex(hls)\n  ) ->\n  color_wheel\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolor_wheel |> \n  ggplot(\n    aes(x, y)\n  )+\n  geom_raster(\n    aes(fill = hex)\n  )+\n  scale_fill_identity()+\n  coord_fixed()\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngb_mod |> \n  predictions(\n    newdata = color_wheel,\n    re_formula = NA\n  ) |> \n  as_tibble()->\n  color_wheel_pred\n\nattr(color_wheel_pred, \"model\") <- NULL\nattr(color_wheel_pred, \"newdata_modeldata\") <- NULL\nattr(color_wheel_pred, \"posterior_draws\") <- NULL\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolor_wheel_pred |> \n  filter(y < 0) ->\n  bottom_pred\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolor_wheel |> \n  ggplot(\n    aes(x, y)\n  ) +\n  geom_raster(aes(fill = hex)) +\n  geom_textcontour(\n    data = bottom_pred,\n    aes(z = estimate),\n    breaks = c(0.1, 0.5, 0.9)\n  ) +\n  scale_fill_identity() +\n  coord_fixed()+\n  theme_no_x() + \n  theme_no_y()\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolor_ranks |> \n  slice(1:2) |> \n  select(-hex) ->\n  rank_inspect\n\nrank_inspect |> \n  left_join(answers, by = \"rank\") |> \n  select(-c(rank, user_id)) |> \n  mutate(\n    .by = color,\n    response_id = row_number()\n  ) |> \n  pivot_wider(\n    names_from = color,\n    values_from = hex\n  ) |> \n  head() ->\n  hex_inspect\n\n\nhex_inspect |> \n  tt() |> \n  style_tt(\n    i = 1:6,\n    j = 2,\n    background = hex_inspect$purple\n  ) |> \n  style_tt(\n    i = 1:6,\n    j = 3,\n    background = hex_inspect$green\n  )\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolor_ranks |> \n  pull(\n    hex\n  ) |> \n  hex2RGB() |> \n  as(\"HLS\") ->\n  hls_data\n\n\nhls_data@coords |> \n  as_tibble()->\n  hls_cols\n\ncolor_ranks |> \n  bind_cols(hls_cols)->\n  hls_ranks\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhls_ranks |> \n  mutate(\n    H_rad = H * (pi/180)\n  ) ->\n  hls_ranks\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhls_ranks |> \n  filter(\n    str_detect(color, \"red|green|blue\")\n  ) |> \n  mutate(\n    base_col = str_extract(color, \"red|green|blue\")\n  ) |> \n  ggplot(\n    aes(sin(H_rad)*L, cos(H_rad)*L)\n  ) +\n  geom_point(\n    aes(color = hex, size = S)\n  ) +\n  stat_hdr(\n    aes(color = base_col),\n    probs = 0.95\n  )+\n  scale_color_identity()+\n  coord_fixed()+\n  guides(alpha = \"none\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhls_ranks |> \n  filter(\n    str_detect(color, \"^light \")\n  ) |> \n  mutate(\n    pieces = str_split(color, \" \"),\n    n_pieces = map_dbl(pieces, length),\n    base_col = map_chr(pieces, ~.x[2]),\n    mod = \"light\"\n  ) |> \n  filter(n_pieces == 2) ->\n  light_cols\n\nhls_ranks |> \n  filter(\n    str_detect(color, \"^dark \")\n  ) |> \n  mutate(\n    pieces = str_split(color, \" \"),\n    n_pieces = map_dbl(pieces, length),\n    base_col = map_chr(pieces, ~.x[2]),\n    mod = \"dark\"\n  ) |> \n  filter(n_pieces == 2) ->\n  dark_cols\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhls_ranks |> \n  filter(color %in% light_cols$base_col) |> \n  mutate(\n    base_col = color,\n    mod = \"base\"\n  )->\n  base_cols\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_cols |> \n  bind_rows(\n    light_cols\n  ) |> \n  select(\n    base_col, mod, hex:H_rad\n  ) |> \n  pivot_wider(\n    names_from = mod, \n    values_from = hex:H_rad\n  ) ->\n  lighten_wide\n\nbase_cols |> \n  bind_rows(\n    dark_cols\n  ) |> \n  select(\n    base_col, mod, hex:H_rad\n  ) |> \n  pivot_wider(\n    names_from = mod, \n    values_from = hex:H_rad\n  ) ->\n  darken_wide\n\nlighten_wide |> \n  ggplot(\n    aes(\n      sin(H_rad_base) * L_base,\n      cos(H_rad_base) * L_base,\n      color = hex_light\n    )\n  )+\n  geom_segment(\n    aes(\n      xend = sin(H_rad_light) * L_light,\n      yend = cos(H_rad_light) * L_light\n    ),\n    arrow = arrow(\n      type = \"closed\",\n      length = unit(0.25, \"cm\")\n    )\n  ) +\n  geom_point(\n    aes(color = hex_base)\n  ) +\n  scale_color_identity() +\n  coord_fixed()\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndarken_wide |> \n  filter(\n    is.finite(H_rad_base)\n  ) |> \n  ggplot(\n    aes(\n      sin(H_rad_dark) * L_dark,\n      cos(H_rad_dark) * L_dark,\n      color = hex_base    \n    )\n  )+\n  geom_segment(\n    aes(\n      xend = sin(H_rad_base) * (L_base),\n      yend = cos(H_rad_base) * (L_base)\n    ),\n    arrow = arrow(\n      type = \"closed\",\n      length = unit(0.25, \"cm\")\n    )\n  ) +\n  geom_point(\n    aes(color = hex_dark)\n  ) +\n  scale_color_identity() +\n  coord_fixed()\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlighten_wide |> \n  mutate(\n    hue_shift = H_rad_light - H_rad_base,\n    hue_shift = case_when(\n      hue_shift > pi ~ hue_shift - (2*pi),\n      .default = hue_shift\n    )\n  )  |> \n  filter(is.finite(H_rad_base)) |> \n  mutate(\n    tb = case_when(\n      cos(H_rad_base) > 0 ~ \"t\",\n      .default = \"b\"\n    ),\n    lr = case_when(\n      sin(H_rad_base) > 0 ~ \"r\",\n      .default = \"l\"\n    ),\n    quadrant = str_glue(\"{tb}{lr}\")\n  ) |> \n  summarise(\n    .by = quadrant,\n    hue_shift = median(hue_shift)\n  ) |> \n  arrange(hue_shift)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 400\nlo <- runif(n)*2*pi-pi ## longitude\nla <- runif(3*n)*pi-pi/2\nind <- runif(3*n)<=cos(la)\nla <- la[ind];\nla <- la[1:n]\n\nsummary(la)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-1.42243 -0.60888 -0.05012 -0.03921  0.49971  1.47805 \n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}